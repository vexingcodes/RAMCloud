More debugging!

From: Aaron Jones <aaron@vexing.codes>


---
 src/DpdkDriver.cc |    8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/src/DpdkDriver.cc b/src/DpdkDriver.cc
index a5408b0e..c096fe8a 100644
--- a/src/DpdkDriver.cc
+++ b/src/DpdkDriver.cc
@@ -47,9 +47,13 @@
 #include "TimeTrace.h"
 #include "Util.h"
 
+#include <atomic>
+
 namespace RAMCloud
 {
 
+std::atomic<int> debug_flag(0);
+
 // Change 0 -> 1 in the following line to compile detailed time tracing in
 // this driver.
 #define TIME_TRACE 0
@@ -467,13 +471,16 @@ DpdkDriver::release(char *payload)
     // Must sync with the dispatch thread, since this method could potentially
     // be invoked in a worker.
     Dispatch::Lock _(context->dispatch);
+    if(debug_flag.fetch_add(1) != 0) std::abort();
     payloadsToRelease.push_back(payload);
+    if(debug_flag.fetch_sub(1) != 1) std::abort();
 }
 
 // See docs in Driver class.
 void
 DpdkDriver::releaseHint(int maxCount)
 {
+    if(debug_flag.fetch_add(1) != 0) std::abort();
     while ((maxCount != 0) && !payloadsToRelease.empty()) {
         maxCount--;
         char* payload = payloadsToRelease.back();
@@ -488,6 +495,7 @@ DpdkDriver::releaseHint(int maxCount)
                     payload - OFFSET_OF(PacketBuf, payload)));
         }
     }
+    if(debug_flag.fetch_sub(1) != 1) std::abort();
 }
 
 // See docs in Driver class.
